{"version":3,"sources":["components/contactList/ContactList.module.css","components/filter/Filter.module.css","components/contactForm/ContactForm.js","redux/contacts/contacts.actions.js","redux/contacts/contacts.operations.js","redux/contacts/contacts.selector.js","components/contactList/ContactList.js","components/filter/Filter.js","App.js","redux/contacts/contacts.reducer.js","redux/store.js","index.js","components/contactForm/ContactForm.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","evt","setState","target","value","onSubmit","preventDefault","props","handleSubmit","className","styles","form","this","title","input","type","onChange","pattern","required","addContact","Component","addNewContactsRequest","createAction","addNewContactsSuccess","addNewContactsError","getAllContactsRequest","getAllContactsSuccess","getAllContactsError","filterChange","removeContactsRequest","removeContactsSuccess","removeContactsError","axios","defaults","baseURL","getFilterContactsSelector","contacts","items","formattedFilter","filter","toLowerCase","trim","item","includes","getFormatFilterSelector","contactsFilterSelector","mapDispatch","handleDelete","id","dispatch","a","delete","connect","list","map","deleteContact","onClick","htmlFor","e","App","term","some","alert","newContact","addNewContacts","contact","_","post","data","getAllContacts","get","loading","createReducer","action","payload","contactsReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d68e906.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteContact\":\"ContactList_deleteContact__1bB5N\",\"list\":\"ContactList_list__2K4PC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__3HpQc\",\"input\":\"Filter_input__3K0YO\"};","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  static propTypes = {\n    handleSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (evt) => {\n    this.setState({ [evt.target.name]: evt.target.value });\n  };\n\n  onSubmit = (evt) => {\n    evt.preventDefault();\n\n    this.props.handleSubmit(this.state);\n\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <>\n        <form className={styles.form} onSubmit={this.onSubmit}>\n          <span className={styles.title}>Name</span>\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            onChange={this.handleChange}\n            value={this.state.name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n          <span className={styles.title}>Number</span>\n          <input\n            className={styles.input}\n            name=\"number\"\n            type=\"tel\"\n            onChange={this.handleChange}\n            value={this.state.number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n          <button className={styles.addContact} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default ContactForm;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst addNewContactsRequest = createAction(\"contacts/addNewContactsRequest\");\nconst addNewContactsSuccess = createAction(\"contacts/addNewContactsSuccess\");\nconst addNewContactsError = createAction(\"contacts/addNewContactsError\");\n\nconst getAllContactsRequest = createAction(\"contacts/getAllContactsRequest\");\nconst getAllContactsSuccess = createAction(\"contacts/getAllContactsSuccess\");\nconst getAllContactsError = createAction(\"contacts/getAllContactsError\");\n\nconst filterChange = createAction(\"contacts/filterChange\");\n\nconst removeContactsRequest = createAction(\"contacts/removeContactsRequest\");\nconst removeContactsSuccess = createAction(\"contacts/removeContactsSuccess\");\nconst removeContactsError = createAction(\"contacts/removeContactsError\");\n\nexport {\n  addNewContactsRequest,\n  addNewContactsSuccess,\n  addNewContactsError,\n  getAllContactsRequest,\n  getAllContactsSuccess,\n  getAllContactsError,\n  filterChange,\n  removeContactsRequest,\n  removeContactsSuccess,\n  removeContactsError,\n};\n","import axios from \"axios\";\nimport {\n  getAllContactsRequest,\n  getAllContactsSuccess,\n  getAllContactsError,\n  addNewContactsRequest,\n  addNewContactsSuccess,\n  addNewContactsError,\n  removeContactsRequest,\n  removeContactsSuccess,\n  removeContactsError,\n} from \"./contacts.actions\";\n\naxios.defaults.baseURL = \"http://localhost:3001/\";\n\nconst addNewContacts = (contact) => async (dispatch, _) => {\n  dispatch(addNewContactsRequest());\n  try {\n    const { data } = await axios.post(\"contacts\", contact);\n    dispatch(addNewContactsSuccess(data));\n  } catch (error) {\n    dispatch(addNewContactsError(error));\n  }\n};\n\nconst getAllContacts = () => async (dispatch) => {\n  dispatch(getAllContactsRequest());\n  try {\n    const { data } = await axios.get(\"contacts\");\n    dispatch(getAllContactsSuccess(data));\n  } catch (error) {\n    dispatch(getAllContactsError(error));\n  }\n};\n\nconst removeContacts = (id) => async (dispatch) => {\n  dispatch(removeContactsRequest());\n  try {\n    await axios.delete(`contacts/${id}`);\n    dispatch(removeContactsSuccess(id));\n  } catch (error) {\n    dispatch(removeContactsError(error));\n  }\n};\n\nexport { addNewContacts, getAllContacts, removeContacts };\n","export const getFilterContactsSelector = (state) => {\n  const { items, filter } = state.contacts;\n\n  const formattedFilter = filter.toLowerCase().trim();\n  const filteredItems = items.filter((item) =>\n    item.name.toLowerCase().includes(formattedFilter)\n  );\n  return filteredItems;\n};\n\nexport const getFormatFilterSelector = (state) => {\n  const items = state.contacts.items;\n  const filter = state.contacts.filter;\n  const formattedFilter = filter.toLowerCase().trim();\n  const filteredItems = items.filter((item) =>\n    item.name.toLowerCase().includes(formattedFilter)\n  );\n  return {\n    items: filteredItems,\n    filter: state.filter,\n  };\n};\n\nexport const contactsFilterSelector = (state) => state.contacts.filter;\n","import PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\n\nimport { connect } from \"react-redux\";\nimport { removeContacts } from \"../../redux/contacts/contacts.operations\";\nimport { getFilterContactsSelector } from \"../../redux/contacts/contacts.selector\";\n\nconst ContactList = ({ items, handleDelete }) => {\n  return (\n    <ul className={styles.list}>\n      {items.map(({ id, name, number }) => (\n        <li key={id}>\n          <p>\n            {name}: {number}\n          </p>\n          <button\n            className={styles.deleteContact}\n            type=\"button\"\n            onClick={() => handleDelete(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  handleDelete: PropTypes.func.isRequired,\n};\n\nconst mapState = (state) => {\n  return {\n    items: getFilterContactsSelector(state),\n  };\n};\n\nconst mapDispatch = {\n  handleDelete: removeContacts,\n};\n\nexport default connect(mapState, mapDispatch)(ContactList);\n","import PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\n\nimport { connect } from \"react-redux\";\nimport { filterChange } from \"../../redux/contacts/contacts.actions\";\nimport { contactsFilterSelector } from \"../../redux/contacts/contacts.selector\";\n\nconst Filter = ({ handleChange, filter }) => {\n  return (\n    <label className={styles.title} htmlFor=\"filter\">\n      Find contacts by name:\n      <input\n        className={styles.input}\n        id=\"filter\"\n        name=\"filter\"\n        type=\"text\"\n        value={filter}\n        onChange={(e) => handleChange(e.target.value)}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n\nconst mapState = (state) => {\n  return {\n    filter: contactsFilterSelector(state),\n  };\n};\n\nconst mapDispatch = {\n  handleChange: filterChange,\n};\n\nexport default connect(mapState, mapDispatch)(Filter);\n","import { Component } from \"react\";\nimport ContactForm from \"./components/contactForm/ContactForm\";\nimport ContactList from \"./components/contactList/ContactList\";\nimport Filter from \"./components/filter/Filter\";\n\nimport { connect } from \"react-redux\";\nimport {\n  addNewContacts,\n  getAllContacts,\n} from \"./redux/contacts/contacts.operations\";\nimport { getFormatFilterSelector } from \"./redux/contacts/contacts.selector\";\n\nclass App extends Component {\n  state = {\n    items: [],\n    filter: \"\",\n  };\n\n  handleSubmit = (term) => {\n    const isDuplicate = this.state.items.some(\n      (item) => item.name === term.name\n    );\n    if (isDuplicate) {\n      alert(\"Такой контакт уже существует \" + term.name);\n      return;\n    }\n\n    const newContact = {\n      name: term.name,\n      number: term.number,\n    };\n    this.props.addNewContacts(newContact);\n  };\n\n  render() {\n    const { items, filter } = this.props;\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm handleSubmit={this.handleSubmit} />\n        <h2>Contacts</h2>\n        <Filter filter={filter} handleChange={this.props.handleChange} />\n        <ContactList items={items} handleDelete={this.props.handleDelete} />\n      </div>\n    );\n  }\n}\n\nconst mapState = (state) => {\n  return {\n    items: getFormatFilterSelector(state),\n    filter: state.filter,\n  };\n};\n\nconst mapDispatch = {\n  addNewContacts,\n  getAllContacts,\n};\n\nexport default connect(mapState, mapDispatch)(App);\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\nimport {\n  addNewContactsRequest,\n  addNewContactsSuccess,\n  addNewContactsError,\n  getAllContactsRequest,\n  getAllContactsSuccess,\n  getAllContactsError,\n  removeContactsRequest,\n  removeContactsSuccess,\n  removeContactsError,\n  filterChange,\n} from \"./contacts.actions\";\n\nconst loading = createReducer(false, {\n  [getAllContactsRequest]: () => true,\n  [getAllContactsSuccess]: () => false,\n  [getAllContactsError]: () => false,\n  [addNewContactsRequest]: () => true,\n  [addNewContactsSuccess]: () => false,\n  [addNewContactsError]: () => false,\n  [removeContactsRequest]: () => true,\n  [removeContactsSuccess]: () => false,\n  [removeContactsError]: () => false,\n});\n\nconst items = createReducer([], {\n  [getAllContactsSuccess]: (_, action) => action.payload,\n  [addNewContactsSuccess]: (state, action) => [action.payload, ...state],\n  [removeContactsSuccess]: (state, action) =>\n    state.filter((item) => item.id !== action.payload),\n});\n\nconst filter = createReducer(\"\", {\n  [filterChange]: (_, action) => action.payload,\n});\n\nconst contactsReducer = combineReducers({\n  items,\n  filter,\n  loading,\n});\n\nexport default contactsReducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./contacts/contacts.reducer\";\n\nconst store = configureStore({\n  reducer: { contacts: contactsReducer },\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2IUqW\",\"title\":\"ContactForm_title__3NFNu\",\"input\":\"ContactForm_input__2u7Lv\",\"addContact\":\"ContactForm_addContact__2i8KS\"};"],"sourceRoot":""}